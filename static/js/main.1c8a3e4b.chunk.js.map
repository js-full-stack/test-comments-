{"version":3,"sources":["components/Form/Form.jsx","service/comments-api.js","components/Container/Container.jsx","App.js","index.js"],"names":["useStyles","makeStyles","form","display","flexDirection","alignItems","marginTop","input","marginBottom","width","button","Form","onSubmit","classes","useState","name","setName","text","setText","className","e","preventDefault","InputLabel","TextField","onChange","target","value","type","required","placeholder","label","variant","size","id","multiline","rows","Button","color","endIcon","Send","axios","defaults","baseURL","getComments","a","currentPage","paginationUrl","get","data","current_page","last_page","console","log","addComment","newComment","post","Container","maxWidth","padding","margin","children","contentWrap","wordWrap","backgroundColor","dataList","gridTemplateColumns","pagination","App","comments","setComments","setCurrentPage","totalPages","setTotalPages","isLoading","setIsLoading","useEffect","commentsApi","then","prevComments","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","handleFormSubmit","comment","config","JSON","parse","List","map","ListItem","Card","CardContent","uuidv4","CircularProgress","Cached","onClick","prevPage","Pagination","count","page","length","splice","siblingCount","autoClose","transition","Zoom","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1c8a3e4b.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { Button } from '@material-ui/core/';\r\nimport { Send as SendIcon } from '@material-ui/icons/';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, InputLabel } from '@material-ui/core/';\r\n\r\nconst useStyles = makeStyles({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'start',\r\n    marginTop: '30px',\r\n  },\r\n  input: {\r\n    marginBottom: '15px',\r\n    width: '320px',\r\n  },\r\n  button: {\r\n    marginBottom: '10px',\r\n    width: '120px',\r\n  },\r\n});\r\n\r\nconst Form = ({ onSubmit }) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [text, setText] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const newComment = {\r\n      name,\r\n      text,\r\n    };\r\n    onSubmit(newComment);\r\n    setName('');\r\n    setText('');\r\n  };\r\n\r\n  const handleInputName = e => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleInputComment = e => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={handleSubmit}>\r\n      <InputLabel>\r\n        <TextField\r\n          onChange={handleInputName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={classes.input}\r\n          required\r\n          placeholder=\"Input you name\"\r\n          label=\"Name\"\r\n          aria-labelledby=\"user name\"\r\n          variant=\"outlined\"\r\n          value={name}\r\n          size=\"medium\"\r\n        />\r\n      </InputLabel>\r\n\r\n      <InputLabel>\r\n        <TextField\r\n          onChange={handleInputComment}\r\n          type=\"text\"\r\n          name=\"comment\"\r\n          className={classes.input}\r\n          value={text}\r\n          required\r\n          placeholder=\"Input your comment\"\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Comment\"\r\n          aria-labelledby=\"user comment\"\r\n          multiline\r\n          rows={4}\r\n          variant=\"outlined\"\r\n        />\r\n      </InputLabel>\r\n      <Button\r\n        type=\"submit\"\r\n        aria-label=\"send comment\"\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        endIcon={<SendIcon>send</SendIcon>}\r\n      >\r\n        Send\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://jordan.ashton.fashion/api';\r\nconst URL = '/goods/30/comments';\r\n\r\nconst getComments = async (currentPage = 1) => {\r\n  const paginationUrl = `/goods/30/comments?page=${currentPage}`;\r\n  try {\r\n    const { data } = await axios.get(paginationUrl);\r\n    const { current_page, last_page } = data;\r\n    // const countPages = Math.ceil(total / per_page);\r\n    return { data, last_page, current_page };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst addComment = async newComment => {\r\n  try {\r\n    const data = await axios.post(URL, newComment);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default { getComments, addComment };\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  Container: {\r\n    maxWidth: '1200px',\r\n    padding: '0 15px',\r\n    margin: '0 auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nconst Container = ({ children }) => {\r\n  const classes = useStyles();\r\n  return <div className={classes.Container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import { useState, useEffect } from 'react';\nimport Form from './components/Form';\n// import Container from './components/Container';\nimport commentsApi from './service/comments-api';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Cached as CachedIcon } from '@material-ui/icons/';\nimport { Pagination } from '@material-ui/lab';\nimport Container from './components/Container';\nimport {\n  Button,\n  List,\n  ListItem,\n  CircularProgress,\n  Card,\n  CardContent,\n} from '@material-ui/core/';\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  button: {\n    marginTop: '15px',\n    marginBottom: '40px',\n  },\n\n  contentWrap: {\n    width: '550px',\n    wordWrap: 'break-word',\n    backgroundColor: 'rgba(150, 147, 245, 0.5)',\n  },\n\n  dataList: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n  },\n\n  pagination: {\n    marginBottom: '60px',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [comments, setComments] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchComments = () => {\n      commentsApi\n        .getComments(currentPage)\n        .then(({ data, current_page, last_page }) => {\n          setCurrentPage(current_page);\n          setTotalPages(last_page);\n          setComments(prevComments => {\n            return [...prevComments, ...data.data];\n          });\n\n          // currentPage === totalPages &&\n          //   toast.info(\n          //     'Oops ... Pages run out. There is nowhere to scroll further',\n          //   );\n        })\n\n        .finally(() => {\n          setIsLoading(false);\n\n          currentPage > 1 &&\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: 'smooth',\n            });\n        });\n    };\n\n    fetchComments();\n  }, [currentPage]);\n\n  const handleFormSubmit = async comment => {\n    const newComment = await commentsApi\n      .addComment(comment)\n      .then(({ config }) => JSON.parse(config.data));\n    setComments([newComment, ...comments]);\n  };\n\n  const handleLoadMoreBtn = () => {\n    setCurrentPage(prevPage => {\n      return isLoading ? currentPage : prevPage + 1;\n    });\n  };\n\n  const handlePaginationPage = (e, page) => {\n    if (isLoading) {\n      return setCurrentPage(currentPage);\n    }\n    setCurrentPage(page);\n    if (comments.length) {\n      setComments(\n        prevComments => prevComments.splice(0, prevComments.length),\n        comments,\n      );\n    }\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleFormSubmit} />\n\n      {!isLoading && (\n        <List className={classes.dataList}>\n          {comments.map(({ name, text }) => (\n            <ListItem key={uuidv4()}>\n              <Card>\n                <CardContent className={classes.contentWrap}>\n                  Name: {name}\n                </CardContent>\n                <CardContent className={classes.contentWrap}>\n                  Comment: {text}\n                </CardContent>\n              </Card>\n            </ListItem>\n          ))}\n        </List>\n      )}\n\n      {isLoading && <CircularProgress />}\n\n      {!isLoading && currentPage !== totalPages && (\n        <Button\n          size=\"medium\"\n          type=\"submit\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n          aria-label=\"load more\"\n          endIcon={<CachedIcon>send</CachedIcon>}\n          onClick={handleLoadMoreBtn}\n        >\n          Load more\n        </Button>\n      )}\n\n      {!isLoading && (\n        <Pagination\n          className={classes.pagination}\n          count={totalPages}\n          page={currentPage}\n          onChange={handlePaginationPage}\n          color=\"primary\"\n          size=\"large\"\n          siblingCount={2}\n        />\n      )}\n      <ToastContainer autoClose={4000} transition={Zoom} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}